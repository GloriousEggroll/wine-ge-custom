From a5439a8a6d3706ee6c3ea13cd76deee1484083d4 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Sat, 12 Sep 2020 14:10:18 +1000
Subject: xactengine3_7: notifications


diff --git a/dlls/xactengine3_7/xact_dll.c b/dlls/xactengine3_7/xact_dll.c
index 326f79f0ecd..62084f9234f 100644
--- a/dlls/xactengine3_7/xact_dll.c
+++ b/dlls/xactengine3_7/xact_dll.c
@@ -329,6 +329,8 @@ static HRESULT WINAPI IXACT3SoundBankImpl_Prepare(IXACT3SoundBank *iface,
     cue->fact_cue = fcue;
     *ppCue = &cue->IXACT3Cue_iface;
 
+    FACTCue_SetPrivateContext(fcue, &cue->IXACT3Cue_iface);
+
     TRACE("Created Cue: %p\n", cue);
 
     return S_OK;
@@ -370,6 +372,8 @@ static HRESULT WINAPI IXACT3SoundBankImpl_Play(IXACT3SoundBank *iface,
         cue->IXACT3Cue_iface.lpVtbl = &XACT3Cue_Vtbl;
         cue->fact_cue = fcue;
         *ppCue = &cue->IXACT3Cue_iface;
+
+        FACTCue_SetPrivateContext(fcue, &cue->IXACT3Cue_iface);
     }
 
     return hr;
@@ -627,6 +631,8 @@ static HRESULT WINAPI IXACT3WaveBankImpl_Prepare(IXACT3WaveBank *iface,
     wave->fact_wave = fwave;
     *ppWave = &wave->IXACT3Wave_iface;
 
+    FACTWave_SetPrivateContext(fwave, &wave->IXACT3Wave_iface);
+
     TRACE("Created Wave: %p\n", wave);
 
     return S_OK;
@@ -668,6 +674,8 @@ static HRESULT WINAPI IXACT3WaveBankImpl_Play(IXACT3WaveBank *iface,
         wave->IXACT3Wave_iface.lpVtbl = &XACT3Wave_Vtbl;
         wave->fact_wave = fwave;
         *ppWave = &wave->IXACT3Wave_iface;
+
+        FACTWave_SetPrivateContext(fwave, &wave->IXACT3Wave_iface);
     }
 
     return hr;
@@ -837,6 +845,7 @@ static HRESULT WINAPI IXACT3EngineImpl_GetFinalMixFormat(IXACT3Engine *iface,
 static void FACTCALL fact_notification_cb(const FACTNotification *notification)
 {
     XACT3EngineImpl *engine = (XACT3EngineImpl *)notification->pvContext;
+    XACT_NOTIFICATION note;
 
     /* Older versions of FAudio don't pass through the context */
     if (!engine)
@@ -845,7 +854,45 @@ static void FACTCALL fact_notification_cb(const FACTNotification *notification)
         return;
     }
 
-    FIXME("Unsupported callback type %d\n", notification->type);
+    note.type = notification->type;
+    note.pvContext = engine->contexts[notification->type - 1];
+
+    switch (notification->type)
+    {
+        case XACTNOTIFICATIONTYPE_SOUNDBANKDESTROYED:
+            note.soundBank.pSoundBank = FACTSoundBank_GetPrivateContext(notification->wave.pSoundBank);
+            break;
+#if XACT3_VER >= 0x0205
+        case XACTNOTIFICATIONTYPE_WAVEDESTROYED:
+        case XACTNOTIFICATIONTYPE_WAVELOOPED:
+        case XACTNOTIFICATIONTYPE_WAVEPLAY:
+        case XACTNOTIFICATIONTYPE_WAVEPREPARED:
+#endif
+        case XACTNOTIFICATIONTYPE_WAVESTOP:
+            note.wave.cueIndex = notification->wave.cueIndex;
+            note.wave.pCue = FACTCue_GetPrivateContext(notification->wave.pCue);
+            note.wave.pSoundBank = FACTSoundBank_GetPrivateContext(notification->wave.pSoundBank);
+#if XACT3_VER >= 0x0205
+            note.wave.pWave = FACTWave_GetPrivateContext(notification->wave.pWave);
+#endif
+            note.wave.pWaveBank = FACTWaveBank_GetPrivateContext(notification->wave.pWaveBank);
+            break;
+
+        case XACTNOTIFICATIONTYPE_CUEPLAY:
+        case XACTNOTIFICATIONTYPE_CUEPREPARED:
+        case XACTNOTIFICATIONTYPE_CUESTOP:
+            note.cue.pCue = FACTCue_GetPrivateContext(notification->cue.pCue);
+            /* Fall through */
+        case XACTNOTIFICATIONTYPE_CUEDESTROYED:
+            note.cue.cueIndex = notification->cue.cueIndex;
+            note.cue.pSoundBank = FACTSoundBank_GetPrivateContext(notification->cue.pSoundBank);
+            break;
+        default:
+            FIXME("Unsupported callback type %d\n", notification->type);
+            return;
+     }
+
+    engine->notification_callback(&note);
 }
 
 static HRESULT WINAPI IXACT3EngineImpl_Initialize(IXACT3Engine *iface,
@@ -961,6 +1008,8 @@ static HRESULT WINAPI IXACT3EngineImpl_CreateSoundBank(IXACT3Engine *iface,
     sb->fact_soundbank = fsb;
     *ppSoundBank = &sb->IXACT3SoundBank_iface;
 
+    FACTSoundBank_SetPrivateContext(fsb, &sb->IXACT3SoundBank_iface);
+
     TRACE("Created SoundBank: %p\n", sb);
 
     return S_OK;
@@ -1037,6 +1086,8 @@ static HRESULT WINAPI IXACT3EngineImpl_CreateInMemoryWaveBank(IXACT3Engine *ifac
 
     send_wavebank_notification(This, &wb->IXACT3WaveBank_iface);
 
+    FACTWaveBank_SetPrivateContext(fwb, &wb->IXACT3WaveBank_iface);
+
     TRACE("Created in-memory WaveBank: %p\n", wb);
 
     return S_OK;
@@ -1087,6 +1138,8 @@ static HRESULT WINAPI IXACT3EngineImpl_CreateStreamingWaveBank(IXACT3Engine *ifa
 
     send_wavebank_notification(This, &wb->IXACT3WaveBank_iface);
 
+    FACTWaveBank_SetPrivateContext(fwb, &wb->IXACT3WaveBank_iface);
+
     TRACE("Created streaming WaveBank: %p\n", wb);
 
     return S_OK;
@@ -1135,6 +1188,8 @@ static HRESULT WINAPI IXACT3EngineImpl_PrepareInMemoryWave(IXACT3Engine *iface,
     wave->fact_wave = fwave;
     *ppWave = &wave->IXACT3Wave_iface;
 
+    FACTWave_SetPrivateContext(fwave, &wave->IXACT3Wave_iface);
+
     TRACE("Created Wave: %p\n", wave);
 
     return S_OK;
@@ -1197,6 +1252,8 @@ static HRESULT WINAPI IXACT3EngineImpl_PrepareStreamingWave(IXACT3Engine *iface,
     wave->fact_wave = fwave;
     *ppWave = &wave->IXACT3Wave_iface;
 
+    FACTWave_SetPrivateContext(fwave, &wave->IXACT3Wave_iface);
+
     TRACE("Created Wave: %p\n", wave);
 
     return S_OK;
@@ -1234,6 +1291,8 @@ static HRESULT WINAPI IXACT3EngineImpl_PrepareWave(IXACT3Engine *iface,
     wave->fact_wave = fwave;
     *ppWave = &wave->IXACT3Wave_iface;
 
+    FACTWave_SetPrivateContext(fwave, &wave->IXACT3Wave_iface);
+
     TRACE("Created Wave: %p\n", wave);
 
     return S_OK;
