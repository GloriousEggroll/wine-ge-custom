diff --git a/dlls/ntdll/signal_x86_64.c b/dlls/ntdll/signal_x86_64.c
index 7e77329363c..0046ffa6e50 100644
--- a/dlls/ntdll/signal_x86_64.c
+++ b/dlls/ntdll/signal_x86_64.c
@@ -655,13 +655,23 @@ __ASM_GLOBAL_FUNC( KiUserApcDispatcher,
  *
  * FIXME: not binary compatible
  */
-void WINAPI KiUserCallbackDispatcher( ULONG id, void *args, ULONG len )
+void WINAPI user_callback_dispatcher( ULONG id, void *args, ULONG len )
 {
     NTSTATUS (WINAPI *func)(void *, ULONG) = ((void **)NtCurrentTeb()->Peb->KernelCallbackTable)[id];

     RtlRaiseStatus( NtCallbackReturn( NULL, 0, func( args, len )));
 }

+__ASM_GLOBAL_FUNC( KiUserCallbackDispatcher,
+                  "movq 0x28(%rsp), %rdx\n\t"
+                  "movl 0x30(%rsp), %ecx\n\t"
+                  "movl 0x34(%rsp), %r8d\n\t"
+                  "andq $0xFFFFFFFFFFFFFFF0, %rsp\n\t"
+                  __ASM_SEH(".seh_endprologue\n\t")
+                  "call "
+                  __ASM_NAME("user_callback_dispatcher") "\n\t"
+                  "int3")

 static ULONG64 get_int_reg( CONTEXT *context, int reg )
 {
diff --git a/dlls/ntdll/unix/signal_x86_64.c b/dlls/ntdll/unix/signal_x86_64.c
index 9a46b4a50b0..b91b986d94c 100644
--- a/dlls/ntdll/unix/signal_x86_64.c
+++ b/dlls/ntdll/unix/signal_x86_64.c
@@ -2318,8 +2318,17 @@ NTSTATUS WINAPI KeUserModeCallback( ULONG id, const void *args, ULONG len, void
     {
         struct syscall_frame *frame = amd64_thread_data()->syscall_frame;
         void *args_data = (void *)((frame->rsp - len) & ~15);
+        struct {
+            void *args;
+            ULONG id;
+            ULONG len;
+        } *params = (void *)((ULONG_PTR)args_data - 0x18);
+

         memcpy( args_data, args, len );
+        params->args = args_data;
+        params->id = id;
+        params->len = len;

         callback_frame.frame.rcx           = id;
         callback_frame.frame.rdx           = (ULONG_PTR)args;
@@ -2328,7 +2337,7 @@ NTSTATUS WINAPI KeUserModeCallback( ULONG id, const void *args, ULONG len, void
         callback_frame.frame.fs            = fs32_sel;
         callback_frame.frame.gs            = ds64_sel;
         callback_frame.frame.ss            = ds64_sel;
-        callback_frame.frame.rsp           = (ULONG_PTR)args_data - 0x28;
+        callback_frame.frame.rsp           = (ULONG_PTR)params - 0x28;
         callback_frame.frame.rip           = (ULONG_PTR)pKiUserCallbackDispatcher;
         callback_frame.frame.eflags        = 0x200;
         callback_frame.frame.restore_flags = CONTEXT_CONTROL | CONTEXT_INTEGER;
