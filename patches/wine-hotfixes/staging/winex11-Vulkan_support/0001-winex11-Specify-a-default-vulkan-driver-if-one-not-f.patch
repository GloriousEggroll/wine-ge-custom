From b6c918acf5996c494bece9efb1439fe00b81a274 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Fri, 1 Jun 2018 14:03:26 +1000
Subject: [PATCH] winex11: Specify a default vulkan driver if one not found at
 build time

We cannot specify it as a dependency since Debian Jessie has the
vulkan library in backports and not everybody will have this mapped.
---
 dlls/winex11.drv/vulkan.c | 38 ++++++++++++++++----------------------
 1 file changed, 16 insertions(+), 22 deletions(-)

diff --git a/dlls/winex11.drv/vulkan.c b/dlls/winex11.drv/vulkan.c
index f4fe202dfaf..1768444b2e5 100644
--- a/dlls/winex11.drv/vulkan.c
+++ b/dlls/winex11.drv/vulkan.c
@@ -40,10 +40,12 @@
 #include "wine/vulkan_driver.h"
 
 WINE_DEFAULT_DEBUG_CHANNEL(vulkan);
-
-#ifdef SONAME_LIBVULKAN
 WINE_DECLARE_DEBUG_CHANNEL(fps);
 
+#ifndef SONAME_LIBVULKAN
+#define SONAME_LIBVULKAN ""
+#endif
+
 static pthread_mutex_t vulkan_mutex;
 
 static XContext vulkan_hwnd_context;
@@ -104,14 +106,23 @@ static void *vulkan_handle;
 
 static void wine_vk_init(void)
 {
-    init_recursive_mutex(&vulkan_mutex);
+    const char *libvulkan_candidates[] = {SONAME_LIBVULKAN,
+                                          "libvulkan.so.1",
+                                          "libvulkan.so",
+                                          NULL};
+    int i;
 
-    if (!(vulkan_handle = dlopen(SONAME_LIBVULKAN, RTLD_NOW)))
+    for (i=0; libvulkan_candidates[i] && !vulkan_handle; i++)
+        vulkan_handle = dlopen(libvulkan_candidates[i], RTLD_NOW);
+
+    if (!vulkan_handle)
     {
-        ERR("Failed to load %s.\n", SONAME_LIBVULKAN);
+        ERR("Failed to load vulkan library\n");
         return;
     }
 
+    init_recursive_mutex(&vulkan_mutex);
+
 #define LOAD_FUNCPTR(f) if (!(p##f = dlsym(vulkan_handle, #f))) goto fail
 #define LOAD_OPTIONAL_FUNCPTR(f) p##f = dlsym(vulkan_handle, #f)
     LOAD_FUNCPTR(vkCreateInstance);
@@ -1270,32 +1270,3 @@ const struct vulkan_funcs *get_vulkan_driver(UINT version)
     return NULL;
 }

-#else /* No vulkan */
-
-const struct vulkan_funcs *get_vulkan_driver(UINT version)
-{
-    ERR("Wine was built without Vulkan support.\n");
-    return NULL;
-}
-
-void destroy_vk_surface(HWND hwnd)
-{
-}
-
-void resize_vk_surfaces(HWND hwnd, Window active, int mask, XWindowChanges *changes)
-{
-}
-
-void sync_vk_surface(HWND hwnd, BOOL known_child)
-{
-}
-
-void invalidate_vk_surfaces(HWND hwnd)
-{
-}
-
-void vulkan_thread_detach(void)
-{
-}
-
-#endif /* SONAME_LIBVULKAN */
-- 
2.35.1

