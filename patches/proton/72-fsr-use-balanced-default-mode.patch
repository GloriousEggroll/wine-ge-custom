diff --git a/dlls/winex11.drv/fs.c b/dlls/winex11.drv/fs.c
index a50529698d8..c969071107f 100644
--- a/dlls/winex11.drv/fs.c
+++ b/dlls/winex11.drv/fs.c
@@ -224,16 +224,43 @@ static void add_fs_mode(struct fs_monitor *fs_monitor, DWORD depth, DWORD width,
     mode->dmDisplayFrequency = frequency;
 }
 
-static BOOL fs_hack_is_fsr_single_mode(UINT *mode)
+static BOOL fs_hack_is_fsr_custom_mode(struct fs_monitor_size *fsr_custom_size)
 {
+    DWORD width, height;
     const char *e;
 
+    width = 0;
+    height = 0;
+    e = getenv("WINE_FULLSCREEN_FSR_CUSTOM_MODE");
+    if (e)
+    {
+        const int n = sscanf(e, "%dx%d", &width, &height);
+        if (n==2)
+        {
+            fsr_custom_size->width = width;
+            fsr_custom_size->height = height;
+            TRACE("found custom resolution: %dx%d\n", fsr_custom_size->width, fsr_custom_size->height);
+            return TRUE;
+        }
+    }
+    return FALSE;
+}
+
+static BOOL fs_hack_is_fsr_single_mode(UINT *mode)
+{
+    const char *e, *e2;
+
     e = getenv("WINE_FULLSCREEN_FSR_MODE");
+    e2 = getenv("WINE_FULLSCREEN_FSR_CUSTOM_MODE");
     if (e)
     {
-        /* If empty or zero don't apply a mode */
-        if (*e == '\0' || *e == '0')
+        /* If a custom mode is set, don't apply a default mode */
+        if (e2)
             return FALSE;
+
+        /* If empty or zero use Balanced mode as default */
+        if (*e == '\0' || *e == '0')
+            *mode = 1;
         /* The 'mode' values should be in sync with the order in 'fsr_ratios' */
         if (!strcmp(e, "Ultra") || !strcmp(e, "ultra"))
             *mode = 3;
@@ -251,28 +278,6 @@ static BOOL fs_hack_is_fsr_single_mode(UINT *mode)
     return FALSE;
 }
 
-static BOOL fs_hack_is_fsr_custom_mode(struct fs_monitor_size *fsr_custom_size)
-{
-    DWORD width, height;
-    const char *e;
-
-    width = 0;
-    height = 0;
-    e = getenv("WINE_FULLSCREEN_FSR_CUSTOM_MODE");
-    if (e)
-    {
-        const int n = sscanf(e, "%dx%d", &width, &height);
-        if (n==2)
-        {
-            fsr_custom_size->width = width;
-            fsr_custom_size->height = height;
-            TRACE("found custom resolution: %dx%d\n", fsr_custom_size->width, fsr_custom_size->height);
-            return TRUE;
-        }
-    }
-    return FALSE;
-}
-
 static BOOL fs_monitor_add_modes(struct fs_monitor *fs_monitor)
 {
     DEVMODEW *real_modes, *real_mode, current_mode;
